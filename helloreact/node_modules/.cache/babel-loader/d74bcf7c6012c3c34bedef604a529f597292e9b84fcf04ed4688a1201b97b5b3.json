{"ast":null,"code":"var _jsxFileName = \"/Users/sreehariaranghat/Desktop/CtsTraining/helloreact/src/Greetings.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Greetings({\n  Text,\n  Code,\n  Sample\n}) {\n  var _props;\n  function generateGreetings() {\n    let hour = new Date().getHours();\n    let greetings = \"\";\n    if (hour >= 0 && hour < 12) greetings = \"Good Morning\";else if (hour >= 12 && hour < 17) greetings = \"Good Afternoon\";else greetings = \"Good Evening\";\n    return greetings;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [Math.floor(Math.random() * 1000), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [generateGreetings(), \" \", props.Text, props.Code]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: (_props = props) === null || _props === void 0 ? void 0 : _props.Sample\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Greetings;\nvar _c;\n$RefreshReg$(_c, \"Greetings\");","map":{"version":3,"names":["Greetings","Text","Code","Sample","_props","generateGreetings","hour","Date","getHours","greetings","_jsxDEV","_Fragment","children","Math","floor","random","props","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sreehariaranghat/Desktop/CtsTraining/helloreact/src/Greetings.js"],"sourcesContent":["export default function Greetings({Text, Code, Sample}){\n\n    function generateGreetings(){\n        let hour = new Date().getHours();\n        let greetings = \"\";\n\n        if(hour >= 0 && hour < 12)\n            greetings = \"Good Morning\";\n        else if(hour >= 12 && hour < 17)\n            greetings = \"Good Afternoon\";\n        else\n            greetings = \"Good Evening\";\n\n        return greetings;\n    }\n\n    return(\n        <>\n           {Math.floor(Math.random() * 1000)}\n            <h1>{generateGreetings()} {props.Text} \n            {props.Code}</h1>\n            <p>\n                {props?.Sample}\n            </p>\n        </>\n    )\n}"],"mappings":";;;AAAA,eAAe,SAASA,SAASA,CAAC;EAACC,IAAI;EAAEC,IAAI;EAAEC;AAAM,CAAC,EAAC;EAAA,IAAAC,MAAA;EAEnD,SAASC,iBAAiBA,CAAA,EAAE;IACxB,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IAChC,IAAIC,SAAS,GAAG,EAAE;IAElB,IAAGH,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAG,EAAE,EACrBG,SAAS,GAAG,cAAc,CAAC,KAC1B,IAAGH,IAAI,IAAI,EAAE,IAAIA,IAAI,GAAG,EAAE,EAC3BG,SAAS,GAAG,gBAAgB,CAAC,KAE7BA,SAAS,GAAG,cAAc;IAE9B,OAAOA,SAAS;EACpB;EAEA,oBACIC,OAAA,CAAAC,SAAA;IAAAC,QAAA,GACIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,eAChCL,OAAA;MAAAE,QAAA,GAAKP,iBAAiB,CAAC,CAAC,EAAC,GAAC,EAACW,KAAK,CAACf,IAAI,EACpCe,KAAK,CAACd,IAAI;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjBV,OAAA;MAAAE,QAAA,GAAAR,MAAA,GACKY,KAAK,cAAAZ,MAAA,uBAALA,MAAA,CAAOD;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA,eACN,CAAC;AAEX;AAACC,EAAA,GA1BuBrB,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}